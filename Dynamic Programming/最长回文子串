//最长回文子串
#include<cstdio>
#include<cstring> 
const int maxn = 1010;
char S[maxn];
int dp[maxn][maxn];   //表示从S[i]到S[j]是否是回文串，是为1，不是为0 
int main() {
	gets(S);      //读入字符串 
	int len = strlen(S),ans =1;
	memset(dp, 0, sizeof(dp));
	//边界
	for(int i = 0; i <= len; i++) {
		dp[i][i]=1;
		if(i < len - 1) {
			if(S[i] == S[i+1]) {
				dp[i][i+1] = 1;
				ans =2;
			}
		}
	} 
	//状态转移方程 
	for(int L = 3; L <= len; L++) {    //枚举子串长度 
		for(int i = 0; i + L -1 < len; i++) {
			int j = i +L-1;
			if(S[i] == S[j] && dp[i+1][j-1] == 1) {
				dp[i][j] = 1;
				ans = L;     //更新最长回文子串长度 
			}
		}
	}
	printf("%d\n", ans);
	return 0;
}
